pipeline
{
    agent any
    stages
    {
        stage('Continuous Download')
        {
            steps
            {
                script
                {
                    try
                    {
                      git 'https://github.com/Rufusayam/CI-CD-Declarative-pipeline.git'  
                    }
                    catch(Exception e1)
                    {
                       mail bcc: '', body: 'Jenkins is unable to download the dev code from github repository', cc: '', from: '', replyTo: '', subject: 'Download failed.', to: 'git.team.com'
                       exit(1)
                    }
                }
            }
        }
        stage('Continuous Build')
        {
            steps
            {
                script
                {
                    try
                    {
                       sh 'mvn package'  
                    }
                    catch(Exception e2)
                    {
                      mail bcc: '', body: 'Jenkins is unable to create an antifact from the downloaded code', cc: '', from: '', replyTo: '', subject: 'Build failed.', to: 'devteam@tc.com'
                      exit(2)
                    }
                }
            }
        } 
           stage('Continuous Deployment')
        {
            steps
            {
                script
                {
                    try
                    {
                      deploy adapters: [tomcat9(credentialsId: 'c8b5b2a2-1946-4bb8-94af-e32c07b8035c', path: '', url: 'http://172.31.15.218:8080')], contextPath: 'testapp', war: '**/*.war'   
                    }
                    catch(Exception e3)
                    {
                      mail bcc: '', body: 'Jenkins is unable to  deploy the antifact into tomcat9 on the qa server', cc: '', from: '', replyTo: '', subject: 'Deployment failed.', to: 'middlewareteam@tc.com'
                      exit(3)
                    }
                }
            }
        }
              stage('Continuous Testing')
        {
            steps
            {
                script
                {
                    try
                    {
                      git 'https://github.com/intelliqittrainings/FunctionalTesting.git' 
               sh 'java -jar /home/ubuntu/.jenkins/workspace/Declarativepipeline/testing.jar'   
                    }
                    catch(Exception e4)
                    {
                       mail bcc: '', body: 'selenium test script has failled', cc: '', from: '', replyTo: '', subject: 'Testingt failed.', to: 'qa.team@tc.com'
                       exit(4)
                    }
                }
            }
        }
        stage('Continuous Delivery')
        {
            steps
            {
                script
                {
                    try
                    {
                     deploy adapters: [tomcat9(credentialsId: 'c8b5b2a2-1946-4bb8-94af-e32c07b8035c', path: '', url: 'http://172.31.6.145:8080')], contextPath: 'prodapp', war: '**/*.war'   
                    }
                    catch(Exception e5)
                    {
                      mail bcc: '', body: 'Jenkin is unable to deploy into tomcat9 on the prodserver', cc: '', from: '', replyTo: '', subject: 'Delivery failed.', to: 'delivery.team@tc.com'
                      exit(5)
                    }
                }
            }
        }
    }
}
